project(StreamZCore)
cmake_minimum_required(VERSION 2.8)

if (WIN32)
    add_compile_options(-std=c++11)
    add_compile_options(-g)
    add_compile_options(-Wall)
    add_compile_options(-Wextra)
else()
    set(CMAKE_CXX_FLAGS "-std=c++0x -Wl,--no-as-needed" ${CMAKE_CXX_FLAGS})
    INCLUDE_DIRECTORIES(/usr/local/include/nopoll)
endif()
aux_source_directory(. SRC_LIST)
aux_source_directory(./LibJSON SRC_LIST)
aux_source_directory(./LibBase64 SRC_LIST)

if (WIN32)
    aux_source_directory(./LibLua SRC_LIST)
    add_custom_target(QtHack SOURCES SocketResult.hpp LuaResult.hpp JSONResult.hpp IResult.hpp LogTag.hpp)

    set(SYSTEM_LIBS ${SYSTEM_LIBS} ssl crypto ws2_32 mswsock nopoll)
else()
    set(SYSTEM_LIBS ${SYSTEM_LIBS} lua5.2 ssl crypto pthread nopoll)
endif()

add_executable(${PROJECT_NAME} ${SRC_LIST})
target_link_libraries(StreamZCore ${SYSTEM_LIBS})

install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../modules DESTINATION ${CMAKE_CURRENT_BINARY_DIR} OPTIONAL)
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/../config.json DESTINATION ${CMAKE_CURRENT_BINARY_DIR})
if (WIN32)
    FILE(GLOB windlls "${CMAKE_CURRENT_SOURCE_DIR}/../../Dlls/*")
    install(FILES ${windlls} DESTINATION ${CMAKE_CURRENT_BINARY_DIR} OPTIONAL)
endif()
